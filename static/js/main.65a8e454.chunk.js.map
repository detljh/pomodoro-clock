{"version":3,"sources":["app/beep.mp3","app/LabelComponent.js","app/TimerComponent.js","app/duck/types.js","app/duck/reducers.js","app/duck/actions.js","app/duck/operations.js","app/duck/index.js","app/TimerContainer.js","app/ClockComponent.js","app/ClockContainer.js","app/App.js","reducers.js","store.js","index.js"],"names":["module","exports","LabelComponent","props","id","className","text","icon","faCaretUp","concat","timeLeft","timerLabel","onClick","handleIncrement","length","faCaretDown","handleDecrement","TimerComponent","getTimeDisplay","bind","audio","React","createRef","this","current","currentTime","duration","disableAlarmBlink","pause","audioPlay","play","minutes","Math","floor","seconds","startStopIcon","isRunning","faPause","faPlay","faSyncAlt","reset","alarmBlink","startStop","preload","src","alarm","ref","Component","INITIAL_STATE","breakLength","sessionLength","totalTime","resetAudio","progress","type","types","time","timer","dispatch","getState","clearInterval","home","Creators","setInterval","tick","increment","decrement","homeReducer","state","action","Object","assign","TimerContainer","connect","homeOperations","ClockComponent","value","strokeWidth","styles","path","stroke","ClockContainer","App","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65a8e454.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beep.90a396b2.mp3\";","import React from 'react';\r\nimport './label.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\nimport './app.scss';\r\n\r\nconst LabelComponent = (props) => {\r\n    return (\r\n        <div id=\"label-container\">\r\n            <label className={\"label\"} id={`${props.id}-label`}>{props.text}</label>\r\n\r\n            <FontAwesomeIcon icon={faCaretUp} \r\n            className={\"label-control \".concat(props.timeLeft < 16 ? \"red-text\" : \r\n            props.timerLabel === \"Session\" ? \"orange-text\" : \"green-text \")} \r\n            id={`${props.id}-increment`} \r\n            onClick={() => props.handleIncrement(props.id)} />\r\n\r\n            <span className=\"label-length\" id={`${props.id}-length`}>{props.length}</span>\r\n\r\n            <FontAwesomeIcon icon={faCaretDown} \r\n            className={\"label-control \".concat(props.timeLeft < 16 ? \"red-text\" : \r\n            props.timerLabel === \"Session\" ? \"orange-text\" : \"green-text \")} \r\n            id={`${props.id}-decrement`} \r\n            onClick={() => props.handleDecrement(props.id)} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LabelComponent;","import React from 'react';\r\nimport alarm from './beep.mp3';\r\nimport './timer.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faPause, faSyncAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport './app.scss';\r\n\r\nclass TimerComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getTimeDisplay = this.getTimeDisplay.bind(this);\r\n        this.audio = React.createRef();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        \r\n        if (this.audio.current.currentTime >= this.audio.current.duration - 0.5) {\r\n            this.props.disableAlarmBlink();\r\n            this.audio.current.pause();\r\n            this.audio.current.currentTime = 0;\r\n        }\r\n\r\n        if (this.props.audioPlay) {\r\n            this.audio.current.play();\r\n        }\r\n    }\r\n\r\n    getTimeDisplay() {\r\n        let minutes = Math.floor(this.props.timeLeft / 60);\r\n        let seconds = this.props.timeLeft % 60;\r\n\r\n        minutes = minutes < 10 ? \"0\".concat(minutes) : minutes;\r\n        seconds = seconds < 10 ? \"0\".concat(seconds) : seconds;\r\n        return minutes + \":\" + seconds;\r\n    }\r\n\r\n    render() {\r\n        const startStopIcon = this.props.isRunning ? faPause : faPlay;\r\n        return (\r\n            <div id=\"timer-container\">\r\n                <div id=\"timer\">\r\n                    <span className={ this.props.timeLeft < 16 ? \"red-border\" :\r\n                        this.props.timerLabel === \"Session\" ? 'orange-border' : 'green-border'\r\n                    } id=\"timer-label\">\r\n                        {this.props.timerLabel}\r\n                    </span>\r\n                    <div id=\"timer-controls-container\">\r\n                        <FontAwesomeIcon className=\"controls\" icon={faSyncAlt} id=\"reset\" onClick={this.props.reset} />\r\n                        <span className={this.props.alarmBlink ? \"blinker\" : \"\"} id=\"time-left\">\r\n                            {this.getTimeDisplay()}\r\n                            </span>\r\n                        <FontAwesomeIcon className=\"controls\" icon={startStopIcon} id=\"start-stop\" onClick={this.props.startStop} /> \r\n                    </div>\r\n                </div>\r\n                \r\n                <audio preload=\"auto\" id=\"beep\" src={alarm} ref={this.audio}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TimerComponent;","const INCREMENT_BREAK = 'INCREMENT_BREAK';\r\nconst DECREMENT_BREAK = 'DECREMENT_BREAK';\r\nconst INCREMENT_SESSION = 'INCREMENT_SESSION';\r\nconst DECREMENT_SESSION = 'DECREMENT_SESSION';\r\nconst STOP = 'STOP';\r\nconst RESET = 'RESET';\r\nconst TICK = 'TICK';\r\nconst START_BREAK = 'START_BREAK';\r\nconst START_SESSION = 'START_SESSION';\r\nconst INITIAL_START = 'INITIAL_START';\r\nconst PLAY_AUDIO = 'PLAY_AUDIO';\r\nconst UPDATE_TOTAL_TIME = 'UPDATE_TOTAL_TIME';\r\nconst DISABLE_ALARM_BLINK = 'DISABLE_ALARM_BLINK';\r\n\r\nexport default {\r\n    INCREMENT_BREAK,\r\n    DECREMENT_BREAK,\r\n    INCREMENT_SESSION,\r\n    DECREMENT_SESSION,\r\n    STOP,\r\n    RESET,\r\n    TICK,\r\n    START_BREAK,\r\n    START_SESSION,\r\n    INITIAL_START,\r\n    PLAY_AUDIO,\r\n    UPDATE_TOTAL_TIME,\r\n    DISABLE_ALARM_BLINK\r\n};","import types from './types.js';\r\n\r\nconst INITIAL_STATE = {\r\n    breakLength: 5,\r\n    sessionLength: 25,\r\n    timerLabel: 'Session',\r\n    isRunning: false,\r\n    timeLeft: 25 * 60,\r\n    totalTime: 25 * 60,\r\n    audioPlay: false,\r\n    resetAudio: false,\r\n    progress: 0,\r\n    alarmBlink: false\r\n};\r\n\r\nconst homeReducer = (state=INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case types.DISABLE_ALARM_BLINK:\r\n            return Object.assign({}, state, {\r\n                alarmBlink: false\r\n            });\r\n        case types.UPDATE_TOTAL_TIME:\r\n            return Object.assign({}, state, {\r\n                totalTime: action.totalTime,\r\n            });\r\n        case types.PLAY_AUDIO:\r\n            return Object.assign({}, state, {\r\n                audioPlay: true,\r\n                alarmBlink: true\r\n            });\r\n        case types.INITIAL_START:\r\n            return Object.assign({}, state, {\r\n                isRunning: true\r\n            });\r\n        case types.START_SESSION:\r\n            return Object.assign({}, state, {\r\n                timeLeft: state.sessionLength * 60,\r\n                totalTime: state.sessionLength * 60,\r\n                isRunning: true,\r\n                timerLabel: 'Session',\r\n                audioPlay: false,\r\n                progress: 0\r\n            });\r\n        case types.START_BREAK:\r\n            return Object.assign({}, state, {\r\n                timeLeft: state.breakLength * 60,\r\n                totalTime: state.breakLength * 60,\r\n                isRunning: true,\r\n                timerLabel: 'Break',\r\n                audioPlay: false,\r\n                progress: 0\r\n            });\r\n        case types.TICK:\r\n            return Object.assign({}, state, {\r\n                timeLeft: state.timeLeft - 1,\r\n                audioPlay: false,\r\n                progress: action.progress\r\n            });\r\n        case types.STOP:\r\n            return Object.assign({}, state, {\r\n                isRunning: false,\r\n                audioPlay: false\r\n            });\r\n        case types.RESET:\r\n            return Object.assign({}, INITIAL_STATE, {\r\n                resetAudio: true,\r\n                audioPlay: false\r\n            });\r\n        case types.INCREMENT_BREAK:\r\n            return Object.assign({}, state, {\r\n                breakLength: state.breakLength + 1,\r\n                timeLeft: action.timeLeft\r\n            });\r\n        case types.INCREMENT_SESSION:\r\n            return Object.assign({}, state, {\r\n                sessionLength: state.sessionLength + 1,\r\n                timeLeft: action.timeLeft\r\n            });    \r\n        case types.DECREMENT_BREAK:\r\n            return Object.assign({}, state, {\r\n                breakLength: state.breakLength - 1,\r\n                timeLeft: action.timeLeft\r\n            });\r\n        case types.DECREMENT_SESSION:\r\n            return Object.assign({}, state, {\r\n                sessionLength: state.sessionLength - 1,\r\n                timeLeft: action.timeLeft\r\n            });    \r\n        default:       \r\n            return state;\r\n    };\r\n};\r\n\r\nexport default homeReducer;","import types from './types.js';\r\n\r\nconst incrementBreak = (timeLeft) => {\r\n    return {\r\n        type: types.INCREMENT_BREAK,\r\n        timeLeft: timeLeft\r\n    };\r\n}\r\n\r\nconst decrementBreak = (timeLeft) => {\r\n    return {\r\n        type: types.DECREMENT_BREAK,\r\n        timeLeft: timeLeft\r\n    };\r\n}\r\n\r\nconst incrementSession = (timeLeft) => {\r\n    return {\r\n        type: types.INCREMENT_SESSION,\r\n        timeLeft: timeLeft\r\n    };\r\n}\r\n\r\nconst decrementSession = (timeLeft) => {\r\n    return {\r\n        type: types.DECREMENT_SESSION,\r\n        timeLeft: timeLeft\r\n    };\r\n}\r\n\r\nconst start = () => {\r\n    return {\r\n        type: types.INITIAL_START,\r\n    }\r\n}\r\n\r\nconst stop = () => {\r\n    return {\r\n        type: types.STOP\r\n    };\r\n}\r\n\r\nconst reset = () => {\r\n    return {\r\n        type: types.RESET\r\n    };\r\n}\r\n\r\nconst tick = (progress) => {\r\n    return {\r\n        type: types.TICK,\r\n        progress: progress\r\n    };\r\n}\r\n\r\nconst startBreak = () => {\r\n    return {\r\n        type: types.START_BREAK\r\n    };\r\n}\r\n\r\nconst startSession = () => {\r\n    return {\r\n        type: types.START_SESSION\r\n    };\r\n}\r\n\r\nconst playAudio = () => {\r\n    return {\r\n        type: types.PLAY_AUDIO\r\n    };\r\n}\r\n\r\nconst updateTotalTime = (time) => {\r\n    return {\r\n        type: types.UPDATE_TOTAL_TIME,\r\n        totalTime: time\r\n    };\r\n}\r\n\r\nconst disableAlarmBlink = () => {\r\n    return {\r\n        type: types.DISABLE_ALARM_BLINK\r\n    };\r\n}\r\n\r\nexport default { \r\n    incrementBreak,\r\n    decrementBreak,\r\n    incrementSession,\r\n    decrementSession,\r\n    start,\r\n    stop,\r\n    reset,\r\n    tick,\r\n    startBreak,\r\n    startSession,\r\n    playAudio,\r\n    updateTotalTime,\r\n    disableAlarmBlink\r\n};","import Creators from './actions.js';\r\n\r\nconst disableAlarmBlink = Creators.disableAlarmBlink;\r\n\r\nlet timer = 0;\r\n\r\nconst tick = (dispatch, getState) => {\r\n    return setInterval(() => {\r\n        let timeLeft = getState().home.timeLeft;\r\n        if (timeLeft <= 0) {\r\n            const timerLabel = getState().home.timerLabel;\r\n            if (timerLabel === \"Session\") {\r\n                dispatch(Creators.startBreak());\r\n            } else {\r\n                dispatch(Creators.startSession());\r\n            } \r\n        } else {\r\n            timeLeft = getState().home.timeLeft;\r\n            const totalTime = getState().home.totalTime;\r\n            const progress = (totalTime - timeLeft + 1) / (totalTime / 100);\r\n            dispatch(Creators.tick(progress));\r\n            timeLeft = getState().home.timeLeft;\r\n            if (timeLeft <= 0) {\r\n                dispatch(Creators.playAudio());\r\n            }\r\n        }\r\n    }, 1000);\r\n}\r\n\r\nconst startStop = () => {\r\n    return (dispatch, getState) => {\r\n        if (timer) {\r\n            clearInterval(timer);\r\n        }\r\n        const isRunning = getState().home.isRunning;\r\n        if (isRunning) {\r\n            dispatch(Creators.stop());\r\n        } else {\r\n            const timerLabel = getState().home.timerLabel;\r\n            if (timerLabel === \"Session\") {\r\n                const time = getState().home.sessionLength * 60;\r\n                dispatch(Creators.updateTotalTime(time));\r\n            } else {\r\n                const time = getState().home.breakLength * 60;\r\n                dispatch(Creators.updateTotalTime(time));\r\n            }\r\n            dispatch(Creators.start());\r\n            timer = tick(dispatch, getState);\r\n        }\r\n    };\r\n};\r\n\r\nconst increment = (type) => {\r\n    return (dispatch, getState) => {\r\n        const isRunning = getState().home.isRunning;\r\n        if (isRunning) {\r\n            return;\r\n        }\r\n        if (type === \"break\") {\r\n            if (getState().home.breakLength < 60) {\r\n                let timeLeft = getState().home.timeLeft;\r\n                if (getState().home.timerLabel === \"Break\") {\r\n                    timeLeft = (getState().home.breakLength + 1) * 60;\r\n                }\r\n                dispatch(Creators.incrementBreak(timeLeft));\r\n            }\r\n        } else if (type === \"session\") {\r\n            if (getState().home.sessionLength < 60) {\r\n                let timeLeft = getState().home.timeLeft;\r\n                if (getState().home.timerLabel === \"Session\") {\r\n                    timeLeft = (getState().home.sessionLength + 1) * 60;\r\n                }\r\n                dispatch(Creators.incrementSession(timeLeft));\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nconst decrement = (type) => {\r\n    return (dispatch, getState) => {\r\n        const isRunning = getState().home.isRunning;\r\n        if (isRunning) {\r\n            return;\r\n        }\r\n        if (type === \"break\") {\r\n            if (getState().home.breakLength > 1) {\r\n                let timeLeft = getState().home.timeLeft;\r\n                if (getState().home.timerLabel === \"Break\") {\r\n                    timeLeft = (getState().home.breakLength - 1) * 60;\r\n                }\r\n                dispatch(Creators.decrementBreak(timeLeft));\r\n            }\r\n        } else if (type === \"session\") {\r\n            if (getState().home.sessionLength > 1) {\r\n                let timeLeft = getState().home.timeLeft;\r\n                if (getState().home.timerLabel === \"Session\") {\r\n                    timeLeft = (getState().home.sessionLength - 1) * 60;\r\n                }\r\n                dispatch(Creators.decrementSession(timeLeft));\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nconst reset = () => {\r\n    return (dispatch) => {\r\n        if (timer) {\r\n            clearInterval(timer);\r\n        }\r\n        dispatch(Creators.reset());\r\n    };\r\n}\r\n\r\nexport default {\r\n    startStop,\r\n    increment,\r\n    decrement,\r\n    reset,\r\n    disableAlarmBlink\r\n};","import homeReducer from './reducers';\r\nexport { default as homeOperations} from './operations';\r\nexport { default as homeTypes } from './types';\r\nexport default homeReducer; ","import { connect } from 'react-redux';\r\nimport TimerComponent from './TimerComponent';\r\nimport { homeOperations } from './duck';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        timerLabel: state.home.timerLabel,\r\n        timeLeft: state.home.timeLeft,\r\n        audioPlay: state.home.audioPlay,\r\n        isRunning: state.home.isRunning,\r\n        alarmBlink: state.home.alarmBlink\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        startStop: () => {\r\n            dispatch(homeOperations.startStop());\r\n        },\r\n        reset: () => {\r\n            dispatch(homeOperations.reset());\r\n        },\r\n        disableAlarmBlink: () => {\r\n            dispatch(homeOperations.disableAlarmBlink());\r\n        }\r\n    };\r\n}\r\n\r\nconst TimerContainer = connect(mapStateToProps, mapDispatchToProps)(TimerComponent);\r\nexport default TimerContainer;","import React from 'react';\r\nimport Label from './LabelComponent';\r\nimport Timer from './TimerContainer';\r\nimport './clock.scss';\r\nimport { CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport './app.scss';\r\n\r\n\r\nconst ClockComponent = (props) => {\r\n    return (\r\n        <div id=\"clock-container\">\r\n            <CircularProgressbarWithChildren value={props.progress} strokeWidth=\"2\" \r\n                styles={{\r\n                    path: {\r\n                      stroke: props.timeLeft < 16 ? 'red' : \r\n                      props.timerLabel === \"Session\" ? 'orange' : 'green'\r\n                    }\r\n                  }}>\r\n                <Timer />\r\n                <hr className={props.timeLeft < 16 ? \"red-border\" :\r\n                    props.timerLabel === \"Session\" ? 'orange-border' : 'green-border'} id=\"divider\" />\r\n                <div id=\"labels\">\r\n                    <Label id=\"break\" text=\"Break Length\" handleIncrement={props.increment} \r\n                    handleDecrement={props.decrement} length={props.breakLength} timerLabel={props.timerLabel}\r\n                    timeLeft={props.timeLeft} />\r\n                    <Label id=\"session\" text=\"Session Length\" handleIncrement={props.increment} \r\n                    handleDecrement={props.decrement} length={props.sessionLength} timerLabel={props.timerLabel} \r\n                    timeLeft={props.timeLeft} />\r\n                </div>\r\n            </CircularProgressbarWithChildren>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClockComponent;","import { connect } from 'react-redux';\r\nimport ClockComponent from './ClockComponent';\r\nimport { homeOperations } from './duck';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        breakLength: state.home.breakLength,\r\n        sessionLength: state.home.sessionLength,\r\n        progress: state.home.progress,\r\n        timerLabel: state.home.timerLabel,\r\n        timeLeft: state.home.timeLeft\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        increment: (type) => {\r\n            dispatch(homeOperations.increment(type));\r\n        },\r\n        decrement: (type) => {\r\n            dispatch(homeOperations.decrement(type));\r\n        }\r\n    };\r\n}\r\n\r\nconst ClockContainer = connect(mapStateToProps, mapDispatchToProps)(ClockComponent);\r\nexport default ClockContainer;","import React from 'react';\r\nimport Clock from './ClockContainer';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Clock />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport homeReducer from './app/duck';\r\n\r\nconst rootReducer = combineReducers({\r\n    home: homeReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.scss';\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>\n, document.getElementById('root'));\n\n"],"sourceRoot":""}